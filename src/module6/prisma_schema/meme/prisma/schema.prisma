// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Supplier {
  supplier_id      String   @id @default(uuid()) @db.VarChar(36)
  supplier_name    String   @db.VarChar(100)
  supplier_phone   String   @db.VarChar(14)
  supplier_email   String   @db.VarChar(256)
  supplier_address String   @db.VarChar(200)
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())

  purchases Purchase[]
}

model Product {
  product_id   String   @id @default(uuid()) @db.VarChar(36)
  product_name String   @db.VarChar(100)
  quantity     Int
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())

  purchase_detail PurchaseDetail?
}

model Purchase {
  purchase_id   String   @id @default(uuid()) @db.VarChar(36)
  purchase_date DateTime
  arrival_date  DateTime
  supplier_id   String   @db.VarChar(36)
  remark        String?  @db.VarChar(500)
  status        Status
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  purchase_detail PurchaseDetail[]
  supplier        Supplier         @relation(fields: [supplier_id], references: [supplier_id])
}

model PurchaseDetail {
  purchase_detail_id String   @id @default(uuid()) @db.VarChar(36)
  purchase_id        String   @unique @default(uuid()) @db.VarChar(36)
  product_id         String   @unique @default(uuid()) @db.VarChar(36)
  quantity           Int
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now())

  purchase Purchase @relation(fields: [purchase_id], references: [purchase_id])
  product  Product  @relation(fields: [product_id], references: [product_id])
}

enum Status {
  PLANNING
  CONFIRMED
}
